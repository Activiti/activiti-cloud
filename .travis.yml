language: java

jdk:
  - openjdk11

env:
  global:
    - MAVEN_CLI_OPTS=" --batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=false -U "
    - MAVEN_TEST_OPTS=" -Dspring.main.banner-mode=off -Denforcer.skip "
    - MAVEN_CMD="mvn ${MAVEN_CLI_OPTS} install ${MAVEN_TEST_OPTS}"

before_install:
  - mkdir -p $HOME/.m2
  - cp settings.xml $HOME/.m2
  - echo MAVEN_OPTS=-Xmx1536m > ~/.mavenrc
  - curl -Ls https://github.com/jenkins-x/jx-release-version/releases/download/v1.0.24/jx-release-version_1.0.24_linux_amd64.tar.gz|  tar
    xvz -C .
  - curl -Ls -o updatebot.jar   https://repo1.maven.org/maven2/io/jenkins/updatebot/updatebot/1.1.53/updatebot-1.1.53.jar
  - sudo cp jx-release-version /usr/bin/jx-release-version
  - sudo cp updatebot.jar  /usr/bin/updatebot.jar
  - echo "java -jar /usr/bin/updatebot.jar" > updatebot
  - sudo cp updatebot  /usr/bin/updatebot
  - sudo chmod a+x /usr/bin/updatebot
  - echo $(jx-release-version) > VERSION

install: travis_wait mvn ${MAVEN_CLI_OPTS} dependency:resolve dependency:resolve-plugins || true

cache:
  directories:
    - ${HOME}/.m2/repository
    - ${HOME}/sourceclear

services:
  - docker

branches:
  only:
    - master
    - develop

stages:
  - name: activiti-cloud-build
  - name: activiti-cloud-api
  - name: activiti-cloud-service-common
  - name: activiti-cloud-acceptance-tests
  - name: activiti-cloud-runtime-bundle-service
  - name: activiti-cloud-messages-service
  - name: activiti-cloud-query-service
  - name: activiti-cloud-audit-service
  - name: activiti-cloud-modeling-service
  - name: activiti-cloud-notifications-graphql-service
  - name: activiti-cloud-connectors
  - name: deploy
    if: type != pull_request
  - name: tag
    if: type != pull_request
  - name: updatebot
    if: type != pull_request
    
jobs:
  include:
    - name: activiti-cloud-build
      stage: activiti-cloud-build
      script:
        - travis_wait 120 ${MAVEN_CMD} -f activiti-cloud-build/pom.xml

    - name: activiti-cloud-api
      stage: activiti-cloud-api
      script:
        - travis_wait 120 ${MAVEN_CMD} -f activiti-cloud-api/pom.xml

    - name: activiti-cloud-service-common
      stage: activiti-cloud-service-common
      script:
        - travis_wait 120 ${MAVEN_CMD} -f activiti-cloud-service-common/pom.xml

    - name: activiti-cloud-acceptance-tests
      stage: activiti-cloud-acceptance-tests
      script:
        - travis_wait 120 ${MAVEN_CMD} -f activiti-cloud-acceptance-tests/pom.xml

    - name: activiti-cloud-runtime-bundle-service
      stage: activiti-cloud-runtime-bundle-service
      script:
        - travis_wait 120 ${MAVEN_CMD} -f activiti-cloud-runtime-bundle-service/pom.xml

    - name: activiti-cloud-messages-service
      stage: activiti-cloud-messages-service
      script:
        - travis_wait 120 ${MAVEN_CMD} -f activiti-cloud-messages-service/pom.xml

    - name: activiti-cloud-query-service
      stage: activiti-cloud-query-service
      script:
        - travis_wait 120 ${MAVEN_CMD} -f activiti-cloud-query-service/pom.xml

    - name: activiti-cloud-audit-service
      stage: activiti-cloud-audit-service
      script:
        - travis_wait 120 ${MAVEN_CMD} -f activiti-cloud-audit-service/pom.xml

    - name: activiti-cloud-modeling-service
      stage: activiti-cloud-modeling-service
      script:
        - travis_wait 120 ${MAVEN_CMD} -f activiti-cloud-modeling-service/pom.xml

    - name: activiti-cloud-notifications-graphql-service
      stage: activiti-cloud-notifications-graphql-service
      script:
        - travis_wait 120 ${MAVEN_CMD} -f activiti-cloud-notifications-graphql-service/pom.xml

    - name: activiti-cloud-connectors
      stage: activiti-cloud-connectors
      script:
        - travis_wait 120 ${MAVEN_CMD} -f activiti-cloud-connectors/pom.xml
    - name: deploy
      stage: deploy
      script: 
        -  
    - name: Create a tag
      stage: tag
      script: |
        mvn versions:set -DnewVersion=$(cat VERSION)
        git add --all
        git commit -m "Release $(cat VERSION)" --allow-empty
        git tag -fa v$(cat VERSION) -m "Release version $(cat VERSION)"
        git push -f -q https://${GITHUB_TOKEN}@github.com/almerico/Activiti.git v$(cat VERSION)
    - name: Deploy to nexus
      stage: deploy
      script:
      - mvn versions:set -DnewVersion=$(cat VERSION)
      - mvn clean deploy -DskipTests
    - name: Update versions in other components
      stage: updatebot
      script:
      - export VERSION=$(cat VERSION)| make updatebot/push-version
# Send coverage data
after_success:
  bash <(curl -s https://codecov.io/bash)

after_failure:
  - cat **/target/surefire-reports/*.xml | grep -B 1 -A 10 "<error"
  - cat **/target/failsafe-reports/*.xml | grep -B 1 -A 10 "<error"

