import:
  - source: Activiti/activiti-scripts:.travis.java.yml@master
  - source: Activiti/activiti-scripts:.travis.awscli-install.yml@master
  - source: Activiti/activiti-scripts:.travis.maven-s3-config.yml@master
  - source: Activiti/activiti-scripts:.travis.helm_install.yml@master
  - source: Activiti/activiti-scripts:.travis.kubernetes_config.yml@master
  - source: Activiti/activiti-scripts:.travis.kubernetes_install.yml@master


fail_fast: true

cache:
  directories:
    - "${HOME}/.m2/repository"

env:
  global:
  - ORG='activiti'
  - APP_NAME='activiti-cloud-dependencies'
  - GITHUB_CHARTS_REPO="https://${GITHUB_TOKEN}@github.com/Activiti/activiti-cloud-helm-charts.git"
  - RELEASE_BRANCH="develop"
  - HELM_REPO_BASE_URL=https://kubernetes-charts.alfresco.com
  - HELM_REPO=stable
  - TRAVIS_WAIT_TIMEOUT=${TRAVIS_WAIT_TIMEOUT:-180}

before_script:
- echo -e "https://${GITHUB_USER}:${GITHUB_TOKEN}@github.com" >>  ~/.git-credentials
- kubectl get ns || travis_terminate 1

stages:
- name: docker
- name: test
- name: publish
  if: type != pull_request
- name: promote
  if: type != pull_request

install: skip

jobs:
  include:
  - name: Build Example Runtime Bundle
    stage: docker
    script: make docker/example-runtime-bundle

  - name: Build Activity Cloud Query
    stage: docker
    script: make docker/activiti-cloud-query

  - name: Build Example Cloud Connector
    stage: docker
    script: make docker/example-cloud-connector

  - name: Build Activiti Cloud Modeling
    stage: docker
    script: make docker/activiti-cloud-modeling

  - name: Run Acceptance Tests
    stage: test
    after_script: make delete || echo "Trying to delete helm chart"
    script: |
      (
      set -e
      make install

      attempt_counter=0
      max_attempts=50
      echo "Waiting for services to be up..."
      until curl --silent --head --fail \
                ${GATEWAY_HOST}/modeling-service/v2/api-docs > /dev/null 2>&1 &&
            curl --silent --head --fail \
                 ${GATEWAY_HOST}/rb/v2/api-docs > /dev/null 2>&1 &&
             curl --silent --head --fail \
                  ${GATEWAY_HOST}/query/v2/api-docs > /dev/null 2>&1; do
          if [ ${attempt_counter} -eq ${max_attempts} ];then
            echo "Max attempts reached"
            break
          fi

          printf '.'
          attempt_counter=$((attempt_counter+1))
          sleep 5
      done
      
      kubectl get all -n ${PREVIEW_NAMESPACE}
      
      make test/modeling-acceptance-tests
      make test/runtime-acceptance-tests
      )

  - name: Publish Helm Charts
    stage: publish
    branches:
      only:
        - develop
    script: make publish

  - name: Promote Release
    stage: promote
    branches:
      only:
        - develop
    script: make promote

before_install:
- echo -e "https://$GITHUB_USER:$GITHUB_TOKEN@github.com" >>  ~/.git-credentials
- echo "$DOCKER_REGISTRY_PASSWORD" | docker login -u "$DOCKER_REGISTRY_USERNAME" --password-stdin
  "$DOCKER_REGISTRY"
- curl -sSL https://download.sourceclear.com/ci.sh | CACHE_DIR=${HOME}/sourceclear
- export ACTIVITI_CLOUD_VERSION=$(grep -oPm1 "(?<=<activiti-cloud.version>)[^<]+"
  "activiti-cloud-dependencies/pom.xml")
- echo ACTIVITI_CLOUD_VERSION=${ACTIVITI_CLOUD_VERSION}

notifications:
  slack:
    secure: J/ilLqmqXD7/4VpZZ3HxFrp5Ae6zJJuo6KjsxP5MN4kTxUhfAJvbrfoZfVioxsBX/qXGx/ckvq1WCzen13N+UrWcL+SiXBf9sTsiB4oB2O4mNV8COUAJThJxHvG6w1YFUYIFePD7s9Y6c+4idL5mLfzdthuzBcwn4lHM64iYcWFXqnOR0dJvChzZnbyrLYhOp5MJq9knDdiemKMNU7TI4sa+FTx4Uxj89/f0qKlw7Wd3cuvf1uSPOof+wy2r5ujPz3c5bvecXURcNUc2GLhNAv4TWMNrfY6jQCoCNC9pdmWHm2qcQjXmVqrM75527rOap9wuh1ZSk+fsh/ExiCUWMROB7An1I7Nqy0AdtjUXctuj0kGcjTyKEvVrUg8Eb0DLmFGANcmNvv28JTTokyM2AWx+Jma5ilDnNVZV1TCv++npFGaTMRSP9f3U3IKYDFzHdkjDRifvpQCrpp1Wj+RaGg8r1dRSyfG/3QoAGJ9CwlM1NxJY9SL7aR+aRLgQHSmdsWZWN+LL6ivLgu2OABjInZHDlzwLtDg1nHupbaxAb1lzxGPik52X5rZEkxUHiLHmCnyI94Yvf0L+jvM/Dko+ETGrTj4e1Qayv6ZxSU8ULsOV8gDeBcK5woaCTJsAzXvohz4vKl1YhZ5WP6vISz7sj/WetaPQyaBOLhfQnz+8O5k=
