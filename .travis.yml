import:
  - source: Activiti/activiti-scripts:.travis.java.yml@master
  - source: Activiti/activiti-scripts:.travis.awscli-install.yml@master
  - source: Activiti/activiti-scripts:.travis.maven-s3-config.yml@master

cache:
  directories:
  - "${HOME}/.m2/repository"

env:
  global:
    - MAVEN_VERIFY_CMD="mvn verify -B -DinstallAtEnd=true"

stages:
- name: test
- name: deploy_preview
  if: type = pull_request
- name: publish reports
- name: tag_deploy_updatebot
  if: type != pull_request

jobs:
  include:
  - name: activiti-cloud-api
    stage: test
    script: ${MAVEN_VERIFY_CMD} -f activiti-cloud-api/pom.xml
  - name: activiti-cloud-service-common
    stage: test
    script: ${MAVEN_VERIFY_CMD} -f activiti-cloud-service-common/pom.xml
  - name: activiti-cloud-acceptance-tests
    stage: test
    script: ${MAVEN_VERIFY_CMD} -f activiti-cloud-acceptance-tests/pom.xml
  - name: activiti-cloud-runtime-bundle-service
    stage: test
    script: ${MAVEN_VERIFY_CMD} -f activiti-cloud-runtime-bundle-service/pom.xml
  - name: activiti-cloud-messages-service
    stage: test
    script: ${MAVEN_VERIFY_CMD} -f activiti-cloud-messages-service/pom.xml
  - name: activiti-cloud-query-service
    stage: test
    script: ${MAVEN_VERIFY_CMD} -f activiti-cloud-query-service/pom.xml
  - name: activiti-cloud-notifications-graphql-service
    stage: test
    script: ${MAVEN_VERIFY_CMD} -f activiti-cloud-notifications-graphql-service/pom.xml
  - name: activiti-cloud-audit-service
    stage: test
    script: ${MAVEN_VERIFY_CMD} -f activiti-cloud-audit-service/pom.xml
  - name: activiti-cloud-modeling-service
    script: ${MAVEN_VERIFY_CMD} -f activiti-cloud-modeling-service/pom.xml
    stage: test
  - name: activiti-cloud-connectors
    stage: test
    script: ${MAVEN_VERIFY_CMD} -f activiti-cloud-connectors/pom.xml
  - name: deploy preview
    stage: deploy_preview
    script: |
      mvn versions:set -DnewVersion=$(cat VERSION) -DprocessAllModules=true -DgenerateBackupPoms=false  || travis_terminate 1
      mvn clean deploy -DskipTests || travis_terminate 1
  - name: publish reports
    stage: publish reports
    before_script: aws s3 sync ${S3_JACCO_DIR} .
    script: bash <(curl -s https://codecov.io/bash)
  - name: tag_deploy_updatebot
    stage: tag_deploy_updatebot
    script: |
      git add -u || travis_terminate 1
      git commit -m "Release $(cat VERSION)" --allow-empty || travis_terminate 1
      git tag -fa v$(cat VERSION) -m "Release version $(cat VERSION)" || travis_terminate 1
      git push -f -q https://${GITHUB_TOKEN}@github.com/Activiti/activiti-cloud.git v$(cat VERSION) || travis_terminate 1
      mvn clean deploy -DskipTests  || travis_terminate 1
      export VERSION=$(cat VERSION)| make updatebot/push-version || travis_terminate 1
after_success:
  - aws s3 sync . ${S3_JACCO_DIR} --exclude "*" --include "*jacoco.xml"
after_failure:
- cat **/target/surefire-reports/*.xml | grep -B 1 -A 10 "<error"
- cat **/target/failsafe-reports/*.xml | grep -B 1 -A 10 "<error"
notifications:
  slack:
    secure: X8z7uRaZQ1Ygxs5el98Qb6ie8yr4qdOaabyMfUYTb3IxR3pucn7D+pGb3mA/+bBe6DqQ1RB6/Xinou7VIV7n2YNzRly9OTu0cgubC7QW8Fg6yexTlZnUxwOwxl25l8wNM6cr45u7dTjCWkOkVrva0FM/ldhAMHxdkuCKo0h7FTM7TWVZl4sN1bAV65jHopGp5Zito/rmmfx5k0g+CAr1fgWTTr6uED43OJdmVhuti4K1FnF/I4V1d+/gl4kHnfQJEpcd1KaH6dNDhrS5aSVB7ZZwYXoihQ1M6Srrcjgt3+w37lWbhgFhdCFiw3bk+veeIFrw/BPGDaQ06ZImbFN1q4rcw3nyZImzle0AXsqNVbtzaZ9ExzcCmCh8xA7L4yjL/gRXAxKkDZE6vd4QmyCzZf3b6+ERhLDyaeOIx3H/KBZlSGn7Ba0iruXCk4DU6DkDYppLAPuH9WxYt2qzhuHBFkQ9LRJx+Iyg7aYCzSuKejQ6IPW6Qik84alqNFPI/5kyXuaaGA7dSVDttsRNA+htz6BurprXc/wso0pyV8rnmMORg7Bz29pQKzEl3NW7CgRZZ/W6UZnlGAwOwzrweZYnVpWLfiU0aPRQKTbqc5njVgoG9+7lkqAIl04LFqPG7aT0Drnt0dtLKV7jjrc91RfpyBWDtG6AkvL43WAjn3lqbIY=
