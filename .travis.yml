import:
  - source: Activiti/activiti-scripts:.travis.java.yml@master
  - source: Activiti/activiti-scripts:.travis.awscli-install.yml@master
  - source: Activiti/activiti-scripts:.travis.maven-s3-config.yml@master
  - source: Activiti/activiti-scripts:.travis.helm_install.yml@master
  - source: Activiti/activiti-scripts:.travis.kubernetes_config.yml@master
  - source: Activiti/activiti-scripts:.travis.kubernetes_install.yml@master


fail_fast: true

cache:
  directories:
    - "${HOME}/.m2/repository"

env:
  global:
  - ORG='activiti'
  - APP_NAME='activiti-cloud-dependencies'
  - GITHUB_CHARTS_REPO="https://${GITHUB_TOKEN}@github.com/Activiti/activiti-cloud-helm-charts.git"
  - RELEASE_BRANCH="develop"
  - HELM_REPO_BASE_URL=https://kubernetes-charts.alfresco.com
  - HELM_REPO=stable
  - TRAVIS_WAIT_TIMEOUT=${TRAVIS_WAIT_TIMEOUT:-180}

before_script:
- echo -e "https://${GITHUB_USER}:${GITHUB_TOKEN}@github.com" >>  ~/.git-credentials
- kubectl get ns || travis_terminate 1

stages:
- name: Build Docker
- name: Run acceptance tests
- name: Publish helm charts
  if: type != pull_request
- name: tag_updatebot
  if: type != pull_request

install: skip

jobs:
  include:
  - name: Build Example Runtime Bundle
    stage: Build Docker
    script: |
      (
      set -e
      mvn verify -B -pl example-runtime-bundle -am
      echo "Building docker image for example-runtime-bundle..."
      docker build -f example-runtime-bundle/Dockerfile -q -t docker.io/activiti/example-runtime-bundle:$(cat VERSION) example-runtime-bundle
      docker push docker.io/activiti/example-runtime-bundle:$(cat VERSION)
      )

  - name: Build Activity Cloud Query
    stage: Build Docker
    script: |
      (
      set -e
      mvn verify -B -pl activiti-cloud-query -am
      echo "Building docker image for activiti-cloud-query..."
      docker build -f activiti-cloud-query/Dockerfile -q -t docker.io/activiti/activiti-cloud-query:$(cat VERSION) activiti-cloud-query
      docker push docker.io/activiti/activiti-cloud-query:$(cat VERSION)
      )

  - name: Build Example Cloud Connector
    stage: Build Docker
    script: |
      (
      set -e
      mvn verify -B -pl example-cloud-connector -am
      echo "Building docker image for activiti-cloud-connector..."
      docker build -f example-cloud-connector/Dockerfile -q -t docker.io/activiti/example-cloud-connector:$(cat VERSION) example-cloud-connector
      docker push docker.io/activiti/example-cloud-connector:$(cat VERSION)
      )

  - name: Build Activiti Cloud Modeling
    stage: Build Docker
    script: |
      (
      set -e
      mvn verify -B -pl activiti-cloud-modeling -am
      echo "Building docker image for activiti-cloud-modeling..."
      docker build -f activiti-cloud-modeling/Dockerfile -q -t docker.io/activiti/activiti-cloud-modeling:$(cat VERSION) activiti-cloud-modeling
      docker push docker.io/activiti/activiti-cloud-modeling:$(cat VERSION)
      )

  - name: Run acceptance tests
    stage: Run acceptance tests
    after_script: cd activiti-cloud-dependencies && make delete|| echo "Trying to delete helm chart" &&  cd -
    script: |
      (
      set -e
      envsubst < .values_template.yml > current_build_values.yml
      cd activiti-cloud-dependencies
      make run-helm-chart

      attempt_counter=0
      max_attempts=50
      echo "Waiting for services to be up..."
      until curl --silent --head --fail \
                ${GATEWAY_HOST}/modeling-service/v2/api-docs > /dev/null 2>&1 &&
            curl --silent --head --fail \
                 ${GATEWAY_HOST}/rb/v2/api-docs > /dev/null 2>&1 &&
             curl --silent --head --fail \
                  ${GATEWAY_HOST}/query/v2/api-docs > /dev/null 2>&1; do
          if [ ${attempt_counter} -eq ${max_attempts} ];then
            echo "Max attempts reached"
            break
          fi

          printf '.'
          attempt_counter=$((attempt_counter+1))
          sleep 5
      done

      cd ../activiti-cloud-acceptance-scenarios
      mvn -pl 'modeling-acceptance-tests' -Droot.log.level=off verify
      mvn -pl 'runtime-acceptance-tests'  -Droot.log.level=off verify
      cd -
      )

  - name: Publish helm charts
    stage: Publish helm charts
    branches:
      only:
        - develop
    script: make create-helm-charts-release-and-upload

  - name: tag_updatebot
    stage: tag_updatebot
    branches:
      only:
        - develop
    script: |
      mvn versions:set -DprocessAllModules=true -DgenerateBackupPoms=false  -DnewVersion=$(cat VERSION)
      mvn clean deploy -DskipTests
      git add -u
      git commit -m "Release $(cat VERSION)" --allow-empty
      git tag -fa v$(cat VERSION) -m "Release version $(cat VERSION)"|| travis_terminate 1;
      git push -f -q https://${GITHUB_TOKEN}@github.com/${TRAVIS_REPO_SLUG}.git v$(cat VERSION)|| travis_terminate 1;
      updatebot push-version --kind maven \
                org.activiti.cloud:activiti-cloud-dependencies ${VERSION} \
                org.activiti.cloud:activiti-cloud-modeling-dependencies ${activiti_cloud_version} \
                org.activiti.cloud:activiti-cloud-audit-dependencies ${activiti_cloud_version} \
                org.activiti.cloud:activiti-cloud-api-dependencies ${activiti_cloud_version} \
                org.activiti.cloud:activiti-cloud-parent ${activiti_cloud_version} \
                org.activiti.cloud:activiti-cloud-connectors-dependencies ${activiti_cloud_version} \
                org.activiti.cloud:activiti-cloud-messages-dependencies ${activiti_cloud_version} \
                org.activiti.cloud:activiti-cloud-modeling-dependencies ${activiti_cloud_version} \
                org.activiti.cloud:activiti-cloud-notifications-graphql-dependencies ${activiti_cloud_version} \
                org.activiti.cloud:activiti-cloud-query-dependencies ${activiti_cloud_version} \
                org.activiti.cloud:activiti-cloud-runtime-bundle-dependencies ${activiti_cloud_version} \
                org.activiti.cloud:activiti-cloud-service-common-dependencies ${activiti_cloud_version} \
                --merge false;
      updatebot push-version --kind helm activiti-cloud-dependencies ${VERSION} \
                      runtime-bundle ${VERSION} \
                      activiti-cloud-connector ${VERSION} \
                      activiti-cloud-query ${VERSION} \
                      activiti-cloud-modeling ${VERSION}

before_install:
- echo -e "https://$GITHUB_USER:$GITHUB_TOKEN@github.com" >>  ~/.git-credentials
- echo "$DOCKER_REGISTRY_PASSWORD" | docker login -u "$DOCKER_REGISTRY_USERNAME" --password-stdin
  "$DOCKER_REGISTRY"
- curl -sSL https://download.sourceclear.com/ci.sh | CACHE_DIR=${HOME}/sourceclear
- export activiti_cloud_version=$(grep -oPm1 "(?<=<activiti-cloud.version>)[^<]+"
  "activiti-cloud-dependencies/pom.xml")
- echo activiti_cloud_version=${activiti_cloud_version}

notifications:
  slack:
    secure: J/ilLqmqXD7/4VpZZ3HxFrp5Ae6zJJuo6KjsxP5MN4kTxUhfAJvbrfoZfVioxsBX/qXGx/ckvq1WCzen13N+UrWcL+SiXBf9sTsiB4oB2O4mNV8COUAJThJxHvG6w1YFUYIFePD7s9Y6c+4idL5mLfzdthuzBcwn4lHM64iYcWFXqnOR0dJvChzZnbyrLYhOp5MJq9knDdiemKMNU7TI4sa+FTx4Uxj89/f0qKlw7Wd3cuvf1uSPOof+wy2r5ujPz3c5bvecXURcNUc2GLhNAv4TWMNrfY6jQCoCNC9pdmWHm2qcQjXmVqrM75527rOap9wuh1ZSk+fsh/ExiCUWMROB7An1I7Nqy0AdtjUXctuj0kGcjTyKEvVrUg8Eb0DLmFGANcmNvv28JTTokyM2AWx+Jma5ilDnNVZV1TCv++npFGaTMRSP9f3U3IKYDFzHdkjDRifvpQCrpp1Wj+RaGg8r1dRSyfG/3QoAGJ9CwlM1NxJY9SL7aR+aRLgQHSmdsWZWN+LL6ivLgu2OABjInZHDlzwLtDg1nHupbaxAb1lzxGPik52X5rZEkxUHiLHmCnyI94Yvf0L+jvM/Dko+ETGrTj4e1Qayv6ZxSU8ULsOV8gDeBcK5woaCTJsAzXvohz4vKl1YhZ5WP6vISz7sj/WetaPQyaBOLhfQnz+8O5k=
