/*
 * Copyright 2017-2020 Alfresco Software, Ltd.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package org.activiti.cloud.common.swagger.springdoc.customizer;

import static org.assertj.core.api.Assertions.assertThat;

import io.swagger.v3.oas.models.Operation;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.ValueSource;
import org.mockito.Mockito;
import org.springframework.web.method.HandlerMethod;

class NamingOperationCustomizerTest {

    private static final String DEFAULT_METHOD_NAME = "findAll";
    private static final String DEFAULT_METHOD_NAME_WITH_NUMBER = "findAll_2";
    private static final String DEFAULT_METHOD_NAME_WITH_MULTIPLE_NUMBERS = "findAll_1_1_1";

    NamingOperationCustomizer namingOperationCustomizer = new NamingOperationCustomizer();

    @ParameterizedTest
    @ValueSource(
        strings = { DEFAULT_METHOD_NAME, DEFAULT_METHOD_NAME_WITH_NUMBER, DEFAULT_METHOD_NAME_WITH_MULTIPLE_NUMBERS }
    )
    void should_changeAutoGeneratedOperationIdAndSummary(String defaultMethodName) {
        Operation operation = new Operation();
        operation.setOperationId(defaultMethodName);
        operation.setSummary(defaultMethodName);

        namingOperationCustomizer.customize(operation, Mockito.mock(HandlerMethod.class));

        assertThat(operation.getOperationId()).isEqualTo(DEFAULT_METHOD_NAME);
        assertThat(operation.getSummary()).isEqualTo(DEFAULT_METHOD_NAME);
    }
}
