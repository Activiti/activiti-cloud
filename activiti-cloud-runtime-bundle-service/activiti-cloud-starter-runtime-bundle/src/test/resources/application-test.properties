spring.main.banner-mode=off
logging.level.root=WARN

spring.application.name=test-app
activiti.cloud.application.name=activiti-app

# Let's disable job executor for running common IT tests to avoid Travis CI timing problems
spring.activiti.asyncExecutorActivate=false

spring.cloud.stream.default.contentType=application/json

# test command results bindings
spring.cloud.stream.bindings.myCmdResults.destination=commandResults
spring.cloud.stream.bindings.myCmdResults.group=${activiti.cloud.application.name}
spring.cloud.stream.bindings.myCmdResults.contentType=application/json

# test command producer bindings
spring.cloud.stream.bindings.myCmdProducer.destination=commandConsumer
spring.cloud.stream.bindings.myCmdProducer.contentType=application/json

# test audit consumer binding
spring.cloud.stream.bindings.auditConsumer.destination=engineEvents
spring.cloud.stream.bindings.auditConsumer.group=audit
spring.cloud.stream.bindings.auditConsumer.contentType=application/json

# connector subscriber (receive integration request)
spring.cloud.stream.bindings.integrationEventsConsumer.destination=payment
spring.cloud.stream.bindings.integrationEventsConsumer.group=integration
spring.cloud.stream.bindings.integrationEventsConsumer.contentType=application/json

# variable mapping connector
spring.cloud.stream.bindings.varMappingIntegrationEventsConsumer.destination=Variable Mapping Connector.variableMappingActionName
spring.cloud.stream.bindings.varMappingIntegrationEventsConsumer.group=integration
spring.cloud.stream.bindings.varMappingIntegrationEventsConsumer.contentType=application/json

# constants connector
spring.cloud.stream.bindings.constantsIntegrationEventsConsumer.destination=Constants Connector.constantsActionName
spring.cloud.stream.bindings.constantsIntegrationEventsConsumer.group=integration
spring.cloud.stream.bindings.constantsIntegrationEventsConsumer.contentType=application/json


# multi-instance result collection connector
spring.cloud.stream.bindings.mealsConnectorConsumer.destination=mealsConnector
spring.cloud.stream.bindings.mealsConnectorConsumer.group=integration
spring.cloud.stream.bindings.mealsConnectorConsumer.contentType=application/json

spring.cloud.stream.bindings.restConnectorConsumer.destination=rest.GET
spring.cloud.stream.bindings.restConnectorConsumer.group=integration
spring.cloud.stream.bindings.restConnectorConsumer.contentType=application/json

activiti.keycloak.test-user=hruser
activiti.keycloak.test-password=password

keycloak.security-constraints[0].authRoles[0]=ACTIVITI_USER
keycloak.security-constraints[0].securityCollections[0].patterns[0]=/v1/*
keycloak.security-constraints[1].authRoles[0]=ACTIVITI_ADMIN
keycloak.security-constraints[1].securityCollections[0].patterns[0]=/admin/*

# project manifest path
project.manifest.file.path=classpath:/default-project.json
spring.zipkin.enabled=false

# Enable message partitioning configuration for test
activiti.cloud.messaging.partitioned=true
activiti.cloud.messaging.instance-index=0
activiti.cloud.messaging.partition-count=1

# Test partitioned consumer properties
spring.cloud.stream.bindings.queryConsumer.consumer.partitioned=${activiti.cloud.messaging.partitioned}
spring.cloud.stream.bindings.auditConsumer.consumer.partitioned=${activiti.cloud.messaging.partitioned}
