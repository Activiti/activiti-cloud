server.port=8080
spring.application.name=example-connector

spring.cloud.stream.bindings.exampleConnectorConsumer.destination=ExampleConnector
spring.cloud.stream.bindings.exampleConnectorConsumer.contentType=application/json
spring.cloud.stream.bindings.exampleConnectorConsumer.group=${spring.application.name}

spring.cloud.stream.bindings.moviesDescriptionConsumer.destination=Movies.getMovieDesc
spring.cloud.stream.bindings.moviesDescriptionConsumer.contentType=application/json
spring.cloud.stream.bindings.moviesDescriptionConsumer.group=${spring.application.name}

spring.cloud.stream.bindings.headersConnectorConsumer.destination=headers.GET
spring.cloud.stream.bindings.headersConnectorConsumer.group=${spring.application.name}
spring.cloud.stream.bindings.headersConnectorConsumer.contentType=application/json

spring.cloud.stream.bindings.miCloudConnectorInput.destination=miCloudConnector
spring.cloud.stream.bindings.miCloudConnectorInput.group=${spring.application.name}
spring.cloud.stream.bindings.miCloudConnectorInput.contentType=application/json

spring.cloud.stream.bindings.testErrorConnectorInput.destination=test-error-connector.throwError
spring.cloud.stream.bindings.testErrorConnectorInput.group=${spring.application.name}
spring.cloud.stream.bindings.testErrorConnectorInput.contentType=application/json

spring.cloud.stream.bindings.testBpmnErrorConnectorInput.destination=test-bpmn-error-connector.throwError
spring.cloud.stream.bindings.testBpmnErrorConnectorInput.group=${spring.application.name}
spring.cloud.stream.bindings.testBpmnErrorConnectorInput.contentType=application/json

keycloak.auth-server-url=${ACT_KEYCLOAK_URL:http://activiti-keycloak:8180/auth}
keycloak.realm=${ACT_KEYCLOAK_REALM:activiti}
keycloak.resource=${ACT_KEYCLOAK_RESOURCE:activiti}
keycloak.ssl-required=${ACT_KEYCLOAK_SSL_REQUIRED:none}
keycloak.public-client=${ACT_KEYCLOAK_CLIENT:true}

keycloak.security-constraints[0].authRoles[0]=${ACT_KEYCLOAK_USER_ROLE:ACTIVITI_USER}
keycloak.security-constraints[0].securityCollections[0].patterns[0]=${ACT_KEYCLOAK_PATTERNS:/v1/*}
keycloak.security-constraints[1].authRoles[0]=${ACT_KEYCLOAK_ADMIN_ROLE:ACTIVITI_ADMIN}
keycloak.security-constraints[1].securityCollections[0].patterns[0]=/admin/*

keycloak.principal-attribute=${ACT_KEYCLOAK_PRINCIPAL_ATTRIBUTE:preferred-username}
# see https://issues.jboss.org/browse/KEYCLOAK-810 for configuration options

activiti.keycloak.admin-client-app=${ACT_KEYCLOAK_CLIENT_APP:admin-cli}
activiti.keycloak.client-user=${ACT_KEYCLOAK_CLIENT_USER:client}
activiti.keycloak.client-password=${ACT_KEYCLOAK_CLIENT_PASSWORD:client}
# this user needs to have the realm management roles assignedld be spring-boot-jasypt, keycloak may support others (can it be set as env variable?)

spring.rabbitmq.host=${ACT_RABBITMQ_HOST:localhost}

logging.level.org.springframework.cloud.stream.binding=ERROR

activiti.cloud.application.name=default-app

# zipkin (set spring.zipkin.enabled to true to activate)
spring.zipkin.enabled=false
spring.zipkin.base-url=http://zipkin:80/
spring.zipkin.sender.type=web
spring.sleuth.sampler.probability=1.0
