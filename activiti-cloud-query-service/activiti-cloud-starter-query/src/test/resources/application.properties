spring.main.banner-mode=off
spring.application.name=query
spring.cloud.stream.bindings.producer-out-0.destination=engineEvents
spring.cloud.stream.bindings.producer-out-0.contentType=application/json
spring.cloud.stream.bindings.queryConsumer-in-0.destination=engineEvents
spring.cloud.stream.bindings.queryConsumer-in-0.group=query
spring.cloud.stream.bindings.queryConsumer-in-0.contentType=application/json
spring.jackson.serialization.fail-on-unwrapped-type-identifiers=false

spring.cloud.stream.bindings.notificationsConsumer-in-0.destination=engineEvents
spring.cloud.stream.bindings.notificationsConsumer-in-0.group=notifications
spring.cloud.stream.bindings.notificationsConsumer-in-0.contentType=application/json

spring.cloud.stream.binders.notificatonsGateway.type=rabbit

spring.cloud.stream.bindings.notificatonsGateway.binder=notificatonsGateway
spring.cloud.stream.bindings.notificatonsGateway.destination=amq.topic
spring.cloud.stream.bindings.notificatonsGateway.content-type=application/json
spring.cloud.stream.rabbit.bindings.notificatonsGateway.producer.exchangeType=topic
spring.cloud.stream.rabbit.bindings.notificatonsGateway.producer.routingKeyExpression=headers['routingKey']

#comment out this testing of security until proc def key made available to these tests
#activiti.cloud.security.user.testuser.mock-app-name.policy.read=defKey1
#activiti.cloud.security.user.hruser.mock-app-name.policy.read=defKey2

authorizations.security-constraints[0].authRoles[0]=ACTIVITI_USER
authorizations.security-constraints[0].securityCollections[0].patterns[0]=/v1/*
authorizations.security-constraints[1].authRoles[0]=ACTIVITI_ADMIN
authorizations.security-constraints[1].securityCollections[0].patterns[0]=/admin/*

spring.jpa.properties.hibernate.generate_statistics=false
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.show-sql=false
