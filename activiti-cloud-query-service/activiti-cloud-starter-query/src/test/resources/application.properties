spring.main.banner-mode=off
spring.application.name=query
spring.cloud.stream.bindings.producer.destination=engineEvents
spring.cloud.stream.bindings.producer.contentType=application/json
spring.cloud.stream.bindings.queryConsumer.destination=engineEvents
spring.cloud.stream.bindings.queryConsumer.group=query
spring.cloud.stream.bindings.queryConsumer.contentType=application/json
spring.jackson.serialization.fail-on-unwrapped-type-identifiers=false

spring.cloud.stream.bindings.notificationsConsumer.destination=engineEvents
spring.cloud.stream.bindings.notificationsConsumer.group=notifications
spring.cloud.stream.bindings.notificationsConsumer.contentType=application/json

spring.cloud.stream.binders.notificatonsGateway.type=rabbit

spring.cloud.stream.bindings.notificatonsGateway.binder=notificatonsGateway
spring.cloud.stream.bindings.notificatonsGateway.destination=amq.topic
spring.cloud.stream.bindings.notificatonsGateway.content-type=application/json
spring.cloud.stream.rabbit.bindings.notificatonsGateway.producer.exchangeType=topic
spring.cloud.stream.rabbit.bindings.notificatonsGateway.producer.routingKeyExpression=headers['routingKey']

#comment out this testing of security until proc def key made available to these tests
#activiti.cloud.security.user.testuser.mock-app-name.policy.read=defKey1
#activiti.cloud.security.user.hruser.mock-app-name.policy.read=defKey2

activiti.keycloak.admin-client-app=admin-cli
activiti.keycloak.client-user=client
activiti.keycloak.client-password=client
spring.rabbitmq.host=localhost
keycloak.auth-server-url=http://localhost:8180/auth
keycloak.realm=activiti
keycloak.resource=activiti
keycloak.public-client=true

keycloak.security-constraints[0].authRoles[0]=ACTIVITI_USER
keycloak.security-constraints[0].securityCollections[0].patterns[0]=/v1/*
keycloak.security-constraints[1].authRoles[0]=ACTIVITI_ADMIN
keycloak.security-constraints[1].securityCollections[0].patterns[0]=/admin/*
