spring.application.name=${NAME:query}
spring.cloud.stream.bindings.producer.destination=engineEvents
spring.cloud.stream.bindings.producer.contentType=application/json
spring.cloud.stream.bindings.queryConsumer.destination=engineEvents
spring.cloud.stream.bindings.queryConsumer.group=query
spring.cloud.stream.bindings.queryConsumer.contentType=application/json
spring.jackson.serialization.fail-on-unwrapped-type-identifiers=false
server.port=${PORT:0}

keycloak.auth-server-url=${KEYCLOAKURL:http://activiti-cloud-keycloak:8180/auth}
keycloak.realm=springboot
keycloak.resource=activiti
keycloak.public-client=true

keycloak.security-constraints[0].authRoles[0]=user
keycloak.security-constraints[0].securityCollections[0].patterns[0]=/*

keycloak.principal-attribute=preferred-username
# see https://issues.jboss.org/browse/KEYCLOAK-810 for configuration options

keycloakadminclientapp=admin-cli
keycloakclientuser=client
keycloakclientpassword=client
# this user needs to have the realm management roles assigned
# one option to deal with password being here would be spring-boot-jasypt, keycloak may support others (can it be set as env variable?)
spring.rabbitmq.host=${RABBITHOST:rabbitmq}
eureka.client.serviceUrl.defaultZone=${EUREKAURL:http://activiti-cloud-registry:8761/eureka/}

eureka.instance.hostname=${HOST:activiti-cloud-audit}