# Default values for Maven projects.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
replicaCount: 1

global:
  rabbitmq:
    host:
      value: ""
    username:
      value: guest
    password:
      value: guest
  keycloak:
    url: ""
    name: keycloak
    service:
      type: http
      port: 80
    realm: ""
    resource: ""
  ## The list of hostnames to be covered with this ingress record.
  ## Most likely this will be just one host, but in the event more hosts are needed, this is an array
  gateway:
    host: ""

## Allows the specification of additional environment variables
extraEnv: |
  # - name: ACT_KEYCLOAK_URL
  #   valueFrom:
  #     configMapKeyRef:
  #       name: {{ .Release.Name }}-keycloak-http
  #       key: expose-keycloak-service-key

javaOpts:
  xmx: 1024m
  xms: 256m
  other: -XX:+UnlockExperimentalVMOptions   -Dsun.zip.disableMemoryMapping=true -XX:+UseParallelGC -XX:MinHeapFreeRatio=5 -XX:MaxHeapFreeRatio=10 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90
# only set this variable if a private registry secret is needed to pull the image
#registryPullSecrets: private-registry-secret
image:
  repository: activiti/example-cloud-connector
  tag: 7.0.0.SR1
  pullPolicy: IfNotPresent
service:
  type: ClusterIP
  externalPort: 80
  internalPort: 8080
  annotations:
    fabric8.io/expose: "false"
    fabric8.io/ingress.annotations: "kubernetes.io/ingress.class: nginx"
resources:
  limits:
    cpu: 1
    memory: 1024Mi
  requests:
    cpu: 150m
    memory: 256Mi
probePath: '{{ include "common.ingress-path" .}}/actuator/health'
livenessProbe:
  initialDelaySeconds: 60
  periodSeconds: 15
  timeoutSeconds: 4
  failureThreshold: 4
  successThreshold: 1
readinessProbe:
  initialDelaySeconds: 20
  periodSeconds: 15
  timeoutSeconds: 3
  successThreshold: 1
  failureThreshold: 4
terminationGracePeriodSeconds: 20


ingress:
  ## Set to true to enable ingress record generation
  enabled: false

  path: /example-cloud-connector

  ## Set this to true in order to enable TLS on the ingress record
  tls: false

  ## If TLS is set to true, you must declare what secret will store the key/certificate for TLS
  tlsSecret: 

  ## Ingress annotations done as key:value pairs
  annotations: {}

#config for configmap if using sck8s
#configMap:
#  feed.rate: 1000

## Add additional volumes and mounts
extraVolumes: |
extraVolumeMounts: |

db:
  uri:
  username:
  password:
  driver:
  platform:
  generateDdl:
  ddlAuto:

postgres:
  enabled: false
  name: postgres
  port: 5432
  username: postgres
  password:

