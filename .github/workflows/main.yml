name: CI

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the develop branch
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  CLUSTER_NAME: activiti-test
  CLUSTER_DOMAIN: envalfresco.com
  GITHUB_PR_NUMBER: ${{ github.event.pull_request.number }}

jobs:

  pre-commit:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up python
        uses: actions/setup-python@v2
      - name: Run pre-commit
        uses: pre-commit/action@v2.0.0

  build:
    runs-on: ubuntu-20.04
    needs: pre-commit
    # Map a step output to a job output
    outputs:
      version: ${{ steps.set-version.outputs.version }}
      branch-name: ${{ steps.set-branch-name.outputs.branch-name }}
      preview-name: ${{ steps.set-preview-name.outputs.preview-name }}
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.8.0
        with:
          access_token: ${{ github.token }}

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Java JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      # step required for https://github.com/nektos/act/issues/161 to run locally with https://github.com/nektos/act
      - name: Set up Maven
        if: ${{ env.ACT }}
        run: |
          apt-get update && apt-get install -y libfontconfig1
          curl -fsSL https://www-eu.apache.org/dist/maven/maven-3/$MAVEN_VERSION/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz \
            | tar xz -C /usr/share
          ln -s /usr/share/apache-maven-$MAVEN_VERSION/bin/mvn /usr/bin/mvn
        env:
          MAVEN_VERSION: 3.6.3

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Configure Maven
        run: |
          echo "MAVEN_USERNAME=$MAVEN_USERNAME" >> $GITHUB_ENV
          echo "MAVEN_PASSWORD=$MAVEN_PASSWORD" >> $GITHUB_ENV
          echo "MAVEN_CLI_OPTS=-s $GITHUB_WORKSPACE/settings.xml -B -ntp" >> $GITHUB_ENV
        env:
          MAVEN_USERNAME: ${{ secrets.NEXUS_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - uses: actions/setup-python@v2
        if: ${{ github.event_name == 'push' }}
      - uses: Alfresco/alfresco-build-tools/.github/actions/setup-pysemver@v1.2.1
        if: ${{ github.event_name == 'push' }}
      - id: next-release
        if: ${{ github.event_name == 'push' }}
        name: Calculate next internal release
        uses: Alfresco/alfresco-build-tools/.github/actions/calculate-next-internal-version@v1.2.1
        with:
          next-version: 7.3.0

      - name: Update VERSION file
        if: ${{ github.event_name == 'push' }}
        run: echo ${{steps.next-release.outputs.next-prerelease}} > VERSION


      - name: Set BRANCH_NAME env variable
        id: set-branch-name
        run: |
          BRANCH_NAME=${GITHUB_HEAD_REF:-$GITHUB_REF}
          BRANCH_NAME=${BRANCH_NAME#refs/heads/}
          BRANCH_NAME=$(echo ${BRANCH_NAME/\//-} | tr '[:upper:]' '[:lower:]')
          echo set BRANCH_NAME=$BRANCH_NAME
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
          echo "::set-output name=branch-name::$BRANCH_NAME"

      - name: Set PREVIEW_NAME env variable
        id: set-preview-name
        run: |
          test ${GITHUB_PR_NUMBER} && PREVIEW_NAME=pr-${GITHUB_PR_NUMBER} || PREVIEW_NAME=gh-$GITHUB_RUN_NUMBER
          echo set PREVIEW_NAME=$PREVIEW_NAME
          echo "PREVIEW_NAME=$PREVIEW_NAME" >> $GITHUB_ENV
          echo "::set-output name=preview-name::$PREVIEW_NAME"

      - name: Set preview version
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          echo 0.0.1-$PREVIEW_NAME-$GITHUB_RUN_NUMBER-SNAPSHOT > VERSION

      - name: Set VERSION env variable
        id: set-version
        run: |
          VERSION=$(cat VERSION)
          echo set VERSION=$VERSION
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "::set-output name=version::$VERSION"

      - name: Build Example Runtime Bundle
        run: make docker/example-runtime-bundle

      - name: Build Activity Cloud Query
        run: make docker/activiti-cloud-query

      - name: Build Example Cloud Connector
        run: make docker/example-cloud-connector

      - name: Build Activiti Cloud Modeling
        run: make mvn/activiti-cloud-modeling/liquibase docker/activiti-cloud-modeling

  test:
    runs-on: ubuntu-20.04
    needs: build
    strategy:
      fail-fast: false
      matrix:
        messaging-broker: [rabbitmq, kafka]
        messaging-partitioned: [partitioned, non-partitioned]
        messaging-destinations: [default-destinations]
        include:
          - messaging-broker: kafka
            messaging-partitioned: partitioned
            messaging-destinations: override-destinations
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Java JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      # step required for https://github.com/nektos/act/issues/161 to run locally with https://github.com/nektos/act
      - name: Set up Maven
        if: ${{ env.ACT }}
        run: |
          apt-get update && apt-get install -y libfontconfig1
          curl -fsSL https://www-eu.apache.org/dist/maven/maven-3/$MAVEN_VERSION/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz \
            | tar xz -C /usr/share
          ln -s /usr/share/apache-maven-$MAVEN_VERSION/bin/mvn /usr/bin/mvn
        env:
          MAVEN_VERSION: 3.6.3

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Configure Maven
        run: |
          echo "MAVEN_USERNAME=$MAVEN_USERNAME" >> $GITHUB_ENV
          echo "MAVEN_PASSWORD=$MAVEN_PASSWORD" >> $GITHUB_ENV
          echo "MAVEN_CLI_OPTS=-s $GITHUB_WORKSPACE/settings.xml -B -ntp" >> $GITHUB_ENV
        env:
          MAVEN_USERNAME: ${{ secrets.NEXUS_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}

      - name: Set up kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: v1.19.6

      - name: Set up Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.5.2

      - name: Set up yq
        uses: Alfresco/alfresco-build-tools/.github/actions/setup-yq@v1.2.1

      - name: Set up rancher
        uses: Alfresco/alfresco-build-tools/.github/actions/setup-rancher-cli@v1.2.1
        with:
          url: ${{ secrets.RANCHER2_URL }}
          access-key: ${{ secrets.RANCHER2_ACCESS_KEY }}
          secret-key: ${{ secrets.RANCHER2_SECRET_KEY }}
          context: ${{ env.CLUSTER_NAME }}

      - name: Setup environment for ${{ matrix.messaging-broker }}
        env:
          MESSAGING_BROKER: ${{ matrix.messaging-broker }}
          MESSAGING_PARTITIONED: ${{ matrix.messaging-partitioned }}
          MESSAGING_DESTINATIONS: ${{ matrix.messaging-destinations }}
          PREVIEW_NAME: ${{ needs.build.outputs.preview-name }}
          BRANCH_NAME: ${{ needs.build.outputs.branch-name }}
          VERSION: ${{ needs.build.outputs.version }}
        run: |
          echo "MESSAGING_BROKER=$MESSAGING_BROKER" >> $GITHUB_ENV
          echo "MESSAGING_PARTITIONED=$MESSAGING_PARTITIONED" >> $GITHUB_ENV
          echo "MESSAGING_DESTINATIONS=$MESSAGING_DESTINATIONS" >> $GITHUB_ENV
          echo "PREVIEW_NAME=$PREVIEW_NAME-${MESSAGING_BROKER:0:6}-${MESSAGING_PARTITIONED:0:1}-${MESSAGING_DESTINATIONS:0:1}" >> $GITHUB_ENV
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo $VERSION > VERSION

          source $GITHUB_ENV

          echo MESSAGING_BROKER=$MESSAGING_BROKER
          echo MESSAGING_PARTITIONED=$MESSAGING_PARTITIONED
          echo MESSAGING_DESTINATIONS=$MESSAGING_DESTINATIONS
          echo PREVIEW_NAME=$PREVIEW_NAME
          echo BRANCH_NAME=$BRANCH_NAME
          echo VERSION=$VERSION

      - name: Delete preview for ${{ matrix.messaging-broker }}
        if: ${{ github.event_name == 'pull_request' && contains(github.head_ref, 'preview') }}
        run: |
          kubectl delete ns $PREVIEW_NAME || true

      - name: Install release for ${{ matrix.messaging-broker }}
        run: |
          ### Variables ###
          export SSO_PROTOCOL=https
          export GATEWAY_PROTOCOL=https
          export GLOBAL_GATEWAY_DOMAIN=$CLUSTER_NAME.$CLUSTER_DOMAIN
          export GATEWAY_HOST=gateway-$PREVIEW_NAME.$GLOBAL_GATEWAY_DOMAIN
          export SSO_HOST=identity-$PREVIEW_NAME.$GLOBAL_GATEWAY_DOMAIN

          ### Main ###

          echo "Installing release with make install"
          make install

      - name: (kafka,partitioned) Checks that consumers can be a different number from partitions
        if: ${{ matrix.messaging-broker == 'kafka' && matrix.messaging-partitioned == 'partitioned' && matrix.messaging-destinations == 'default-destinations' }}
        run: |
          ### Variables ###
          export SSO_PROTOCOL=https
          export GATEWAY_PROTOCOL=https
          export GLOBAL_GATEWAY_DOMAIN=$CLUSTER_NAME.$CLUSTER_DOMAIN
          export GATEWAY_HOST=gateway-$PREVIEW_NAME.$GLOBAL_GATEWAY_DOMAIN
          export SSO_HOST=identity-$PREVIEW_NAME.$GLOBAL_GATEWAY_DOMAIN
          export QUERY_CONSUMER_NUMBER=2

          ### Functions ###

          # It checks that the RESULT env var is equals to the first
          # argument passed to the function
          #
          check_result_is () {
            if [ "$RESULT" == "$1" ]; then
              echo "correct"
            else
              echo "number expected is $1 but result is $RESULT"
              exit 1
            fi
          }

          # It counts the number of query consumer pods in the
          # cluster and set it in RESULT env var
          #
          count_query_consumer_pods () {
            export RESULT=$(kubectl -n $PREVIEW_NAME get pods -o \
              'custom-columns=POD:metadata.name,READY-true:status.containerStatuses[*].ready' |\
              grep -e 'activiti-cloud-query.*true' | wc -l | xargs);
          }

          # It counts the number of query partition of engineEvents topic
          # created in Kafka and set it in RESULT env var
          #
          count_query_topic_partitions () {
            export RESULT=$(kubectl exec -t -n $PREVIEW_NAME kafka-0 \
              -c kafka "--" sh -c $'/opt/bitnami/kafka/bin/kafka-topics.sh \
              --bootstrap-server=localhost:9092 --describe \
              --topic engineEvents | grep PartitionCount |\
              awk \'{ printf "%s",$6 }\'')
          }

          ### Main ###

          echo "It checks the deployment has 1 query pod consumer"
          count_query_consumer_pods
          check_result_is 1

          echo "It checks the deployment has 4 query topic patitions"
          count_query_topic_partitions
          check_result_is 4

      - name: Run Acceptance Tests for ${{ matrix.messaging-broker }}
        run: |
          ### Variables ###
          export SSO_PROTOCOL=https
          export GATEWAY_PROTOCOL=https
          export GLOBAL_GATEWAY_DOMAIN=$CLUSTER_NAME.$CLUSTER_DOMAIN
          export GATEWAY_HOST=gateway-$PREVIEW_NAME.$GLOBAL_GATEWAY_DOMAIN
          export SSO_HOST=identity-$PREVIEW_NAME.$GLOBAL_GATEWAY_DOMAIN

          ### Functions ####

          # It evaluates the function passed as a parameter
          # if the result is different than 0 it waits
          # for 5 seconds and re-evaluates it again.
          #
          wait_until_true () {
            local attempt_counter=0
            local max_attempts=50

            until "$@"
            do
              if [ ${attempt_counter} -eq ${max_attempts} ]
              then
                echo "Max attempts reached"
                break
              fi

              printf '.'
              attempt_counter=$((attempt_counter+1))
              sleep 5
            done
          }

          # It makes an HTTP request to the health check of the
          # modeling, query and runtime-bundles API returning 0
          # in case their pods are ready and a value different
          # than 0 otherwise.
          #
          check_services_up () {
            curl --silent --head --fail $GATEWAY_PROTOCOL://$GATEWAY_HOST/modeling-service/actuator/health > /dev/null 2>&1 && \
            curl --silent --head --fail $GATEWAY_PROTOCOL://$GATEWAY_HOST/rb/actuator/health > /dev/null 2>&1 && \
            curl --silent --head --fail $GATEWAY_PROTOCOL://$GATEWAY_HOST/query/actuator/health > /dev/null 2>&1
          }

          ### Main ###

          echo "Waiting for services to be up..."
          wait_until_true check_services_up

          # Showing the deployment result
          kubectl get all -n $PREVIEW_NAME

          # Launching the tests
          make test/modeling-acceptance-tests
          make test/runtime-acceptance-tests

      - name: Delete Helm chart for ${{ matrix.messaging-broker }}
        if: ${{ always() }}
        env:
          IS_PREVIEW: ${{ github.event_name == 'pull_request' && contains(github.head_ref, 'preview') }}
        run: |
            if [ $IS_PREVIEW = true ]
            then
                echo "Skipping delete Helm release for preview"
            else
                echo "Delete Helm release"
                make delete
            fi

      - name: Delete Docker images
        if: ${{ always() }}
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
          IS_PREVIEW: ${{ github.event_name == 'pull_request' && contains(github.head_ref, 'preview') }}
        run: |
            if [ $IS_PREVIEW = true ]
            then
                echo "Skipping delete Docker images for preview"
            else
                echo "Delete Docker images"
                make docker-delete-all
            fi

  promote:
    runs-on: ubuntu-20.04
    needs: [build,test]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Java JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      # step required for https://github.com/nektos/act/issues/161 to run locally with https://github.com/nektos/act
      - name: Set up Maven
        if: ${{ env.ACT }}
        run: |
          apt-get update && apt-get install -y libfontconfig1
          curl -fsSL https://www-eu.apache.org/dist/maven/maven-3/$MAVEN_VERSION/binaries/apache-maven-$MAVEN_VERSION-bin.tar.gz \
            | tar xz -C /usr/share
          ln -s /usr/share/apache-maven-$MAVEN_VERSION/bin/mvn /usr/bin/mvn
        env:
          MAVEN_VERSION: 3.6.3

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Configure Maven
        run: |
          echo "MAVEN_USERNAME=$MAVEN_USERNAME" >> $GITHUB_ENV
          echo "MAVEN_PASSWORD=$MAVEN_PASSWORD" >> $GITHUB_ENV
          echo "MAVEN_CLI_OPTS=-s $GITHUB_WORKSPACE/settings.xml -B -ntp" >> $GITHUB_ENV
        env:
          MAVEN_USERNAME: ${{ secrets.NEXUS_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}

      - name: Set up Helm
        uses: azure/setup-helm@v1
        with:
          version: v3.5.2

      - name: Set up yq
        uses: Alfresco/alfresco-build-tools/.github/actions/setup-yq@v1.2.1

      - name: Configure git user
        if: ${{ github.event_name == 'push' }}
        run: |
          git config --global user.name $GITHUB_USERNAME
          git config --global user.email $GITHUB_USERNAME@users.noreply.github.com
        env:
          GITHUB_USERNAME: ${{ secrets.BOT_GITHUB_USERNAME }}

      - name: Set up updatebot
        if: ${{ github.event_name == 'push' }}
        uses: Alfresco/alfresco-build-tools/.github/actions/setup-updatebot@v1.2.1

      - name: Set up helm-docs
        if: ${{ github.event_name == 'push' }}
        uses: Alfresco/alfresco-build-tools/.github/actions/setup-helm-docs@v1.2.1

      - name: Promote Release
        if: ${{ github.event_name == 'push' }}
        run: |
          echo -e "https://$GITHUB_USERNAME:$GITHUB_TOKEN@github.com" >>  ~/.git-credentials
          echo $VERSION > VERSION
          make promote
        env:
          GITHUB_USERNAME: ${{ secrets.BOT_GITHUB_USERNAME }}
          GITHUB_TOKEN: ${{ secrets.BOT_GITHUB_TOKEN }}
          VERSION: ${{ needs.build.outputs.version }}

      - name: Deploy preview
        if: ${{ github.event_name == 'pull_request' && contains(github.head_ref, 'preview') }}
        run: |
          mvn $MAVEN_CLI_OPTS versions:set -DnewVersion=$VERSION -DprocessAllModules=true -DgenerateBackupPoms=false
          mvn $MAVEN_CLI_OPTS deploy -pl activiti-cloud-dependencies/dependencies -am -DskipTests
        env:
          VERSION: ${{ needs.build.outputs.version }}
