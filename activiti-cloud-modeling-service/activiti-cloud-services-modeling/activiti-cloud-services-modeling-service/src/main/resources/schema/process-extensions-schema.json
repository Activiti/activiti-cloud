{
  "$schema": "http://json-schema.org/draft-07/schema",
  "title": "Process extensions schema",
  "description": "Process extensions schema",
  "type": "object",
  "definitions": {
    "extensions": {
      "type": "object",
      "additionalProperties": false,
      "patternProperties": {
        "Process_.": {
          "$ref": "#/definitions/extension-element"
        }
      }
    },
    "extension-element": {
      "type": "object",
      "additionalProperties": false,
      "patternProperties": {
        "properties": {
          "$ref": "#/definitions/properties"
        },
        "mappings": {
          "$ref": "#/definitions/mappings"
        },
        "constants": {
          "$ref": "#/definitions/constants"
        },
        "templates": {
          "$ref": "#/definitions/templates"
        },
        "assignments": {
          "$ref": "#/definitions/assignments"
        }
      }
    },
    "templates": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "tasks": {
          "$ref": "#/definitions/taskTemplates"
        },
        "default": {
          "$ref": "#/definitions/taskTemplate"
        }
      }
    },
    "taskTemplates": {
      "type": "object",
      "patternProperties": {
        ".*": {
          "$ref": "#/definitions/taskTemplate"
        }
      }
    },
    "taskTemplate": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "assignee": {
          "$ref": "#/definitions/template"
        },
        "candidate": {
          "$ref": "#/definitions/template"
        }
      }
    },
    "template": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "from": {
          "type": "string"
        },
        "subject": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "file",
            "variable"
          ]
        },
        "value": {
          "type": "string"
        }
      },
      "required": [
        "type",
        "value"
      ]
    },
    "properties": {
      "type": "object",
      "patternProperties": {
        ".*": {
          "$ref": "#/definitions/property"
        }
      }
    },
    "property": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "date",
            "datetime",
            "string",
            "integer",
            "bigdecimal",
            "boolean",
            "json",
            "file",
            "folder",
            "content",
            "array"
          ]
        },
        "required": {
          "type": "boolean"
        },
        "display": {
          "type": "boolean"
        },
        "displayName": {
          "type": "string"
        },
        "analytics": {
          "type": "boolean"
        }
      },
      "dependencies": {
        "display": {
          "oneOf": [
            {
              "not": {
                "properties": {
                  "display": {
                    "const": true
                  }
                },
                "required": [
                  "display"
                ]
              }
            },
            {
              "required": [
                "displayName"
              ],
              "message": {
                "type": "string",
                "required": "If a process variable is displayable in the UI, then a display name must be specified"
              }
            }
          ]
        }
      },
      "allOf": [
        {
          "if": {
            "properties": {
              "type": {
                "const": "date"
              }
            }
          },
          "then": {
            "properties": {
              "value": {
                "anyOf": [
                  {
                    "type": "string",
                    "pattern": "^[0-9]{4}-(((0[13578]|(10|12))-(0[1-9]|[1-2][0-9]|3[0-1]))|(02-(0[1-9]|[1-2][0-9]))|((0[469]|11)-(0[1-9]|[1-2][0-9]|30)))$",
                    "message": {
                      "pattern": "Invalid date - {{name}}({{id}})",
                      "type": "Mismatch value type - {{name}}({{id}}). Expected type is date"
                    }
                  },
                  {
                    "type": "string",
                    "pattern": "^\\$\\{(.*)[\\}]$",
                    "message": {
                      "pattern": "Value format in {{name}}({{id}}) is not a valid expression",
                      "type": "Value format in {{name}}({{id}}) is not a valid expression"
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "datetime"
              }
            }
          },
          "then": {
            "properties": {
              "value": {
                "anyOf": [
                  {
                    "type": "string",
                    "pattern": "^((19|20)[0-9][0-9])[-](0[1-9]|1[012])[-](0[1-9]|[12][0-9]|3[01])[T]([01][0-9]|[2][0-3])[:]([0-5][0-9])[:]([0-5][0-9])([+|-]([01][0-9]|[2][0-3])[:]([0-5][0-9])){0,1}$",
                    "message": {
                      "pattern": "Invalid datetime - {{name}}({{id}})",
                      "type": "Mismatch value type - {{name}}({{id}}). Expected type is datetime"
                    }
                  },
                  {
                    "type": "string",
                    "pattern": "^\\$\\{(.*)[\\}]$",
                    "message": {
                      "pattern": "Value format in {{name}}({{id}}) is not a valid expression",
                      "type": "Value format in {{name}}({{id}}) is not a valid expression"
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "string"
              }
            }
          },
          "then": {
            "properties": {
              "value": {
                "type": "string",
                "message": {
                  "type": "Mismatch value type - {{name}}({{id}}). Expected type is string"
                }
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "integer"
              }
            }
          },
          "then": {
            "properties": {
              "value": {
                "anyOf": [
                  {
                    "type": "integer",
                    "message": {
                      "type": "Mismatch value type - {{name}}({{id}}). Expected type is integer"
                    }
                  },
                  {
                    "type": "string",
                    "pattern": "^\\$\\{(.*)[\\}]$",
                    "message": {
                      "pattern": "Value format in {{name}}({{id}}) is not a valid expression",
                      "type": "Value format in {{name}}({{id}}) is not a valid expression"
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "bigdecimal"
              }
            }
          },
          "then": {
            "properties": {
              "value": {
                "anyOf": [
                  {
                    "type": "number",
                    "message": {
                      "type": "Mismatch value type - {{name}}({{id}}). Expected type is decimal"
                    }
                  },
                  {
                    "type": "string",
                    "pattern": "^\\$\\{(.*)[\\}]$",
                    "message": {
                      "pattern": "Value format in {{name}}({{id}}) is not a valid expression",
                      "type": "Value format in {{name}}({{id}}) is not a valid expression"
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "boolean"
              }
            }
          },
          "then": {
            "properties": {
              "value": {
                "anyOf": [
                  {
                    "type": "boolean",
                    "message": {
                      "type": "Mismatch value type - {{name}}({{id}}). Expected type is boolean"
                    }
                  },
                  {
                    "type": "string",
                    "pattern": "^\\$\\{(.*)[\\}]$",
                    "message": {
                      "pattern": "Value format in {{name}}({{id}}) is not a valid expression",
                      "type": "Value format in {{name}}({{id}}) is not a valid expression"
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "file"
              }
            }
          },
          "then": {
            "properties": {
              "value": {
                "anyOf": [
                  {
                    "type": "object",
                    "message": {
                      "type": "Mismatch value type - {{name}}({{id}}). Expected type is file"
                    }
                  },
                  {
                    "type": "string",
                    "pattern": "^\\$\\{(.*)[\\}]$",
                    "message": {
                      "pattern": "Value format in {{name}}({{id}}) is not a valid expression",
                      "type": "Value format in {{name}}({{id}}) is not a valid expression"
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "folder"
              }
            }
          },
          "then": {
            "properties": {
              "value": {
                "anyOf": [
                  {
                    "type": "object",
                    "message": {
                      "type": "Mismatch value type - {{name}}({{id}}). Expected type is folder"
                    }
                  },
                  {
                    "type": "string",
                    "pattern": "^\\$\\{(.*)[\\}]$",
                    "message": {
                      "pattern": "Value format in {{name}}({{id}}) is not a valid expression",
                      "type": "Value format in {{name}}({{id}}) is not a valid expression"
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "array"
              }
            }
          },
          "then": {
            "properties": {
              "value": {
                "anyOf": [
                  {
                    "type": "array",
                    "message": {
                      "type": "Mismatch value type - {{name}}({{id}}). Expected type is array"
                    }
                  },
                  {
                    "type": "string",
                    "pattern": "^\\$\\{(.*)[\\}]$",
                    "message": {
                      "pattern": "Value format in {{name}}({{id}}) is not a valid expression",
                      "type": "Value format in {{name}}({{id}}) is not a valid expression"
                    }
                  }
                ]
              }
            }
          }
        },
        {
          "if": {
            "not": {
              "properties": {
                "analytics": {
                  "enum": [
                    false
                  ]
                }
              }
            }
          },
          "then": {
            "properties": {
              "type": {
                "pattern": "^integer$|^string$|^boolean$|^date$",
                "message": {
                  "pattern": "Mismatch value type - {{name}}({{id}}). Expected type for analytics is one of integer|string|boolean|date"
                }
              }
            }
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "content"
              }
            }
          },
          "then": {
            "properties": {
              "value": {
                "anyOf": [
                  {
                    "type": "object",
                    "message": {
                      "type": "Mismatch value type - {{name}}({{id}}). Expected type is content"
                    }
                  },
                  {
                    "type": "string",
                    "pattern": "^\\$\\{(.*)[\\}]$",
                    "message": {
                      "pattern": "Value format in {{name}}({{id}}) is not a valid expression",
                      "type": "Value format in {{name}}({{id}}) is not a valid expression"
                    }
                  }
                ]
              }
            }
          }
        }
      ],
      "required": [
        "id",
        "name",
        "type",
        "required"
      ]
    },
    "mappings": {
      "type": "object",
      "patternProperties": {
        ".*": {
          "$ref": "#/definitions/mapping-object"
        }
      }
    },
    "mapping-object": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "inputs": {
          "type": "object",
          "additionalProperties": false,
          "patternProperties": {
            ".*": {
              "$ref": "#/definitions/mapping-property"
            }
          }
        },
        "outputs": {
          "type": "object",
          "additionalProperties": false,
          "patternProperties": {
            ".*": {
              "$ref": "#/definitions/mapping-property"
            }
          }
        },
        "mappingType": {
          "type": "string",
          "enum": [
            "MAP_ALL",
            "MAP_ALL_INPUTS",
            "MAP_ALL_OUTPUTS"
          ],
          "additionalProperties": false
        }
      }
    },
    "mapping-property": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "variable",
            "value"
          ]
        },
        "value": {
          "type": [
            "string",
            "number",
            "integer",
            "boolean",
            "object",
            "array"
          ]
        }
      },
      "dependencies": {
        "type": [
          "value"
        ],
        "value": [
          "type"
        ]
      }
    },
    "constants": {
      "type": "object",
      "patternProperties": {
        ".*": {
          "$ref": "#/definitions/constant-container"
        }
      }
    },
    "constant-container": {
      "type": "object",
      "patternProperties": {
        ".*": {
          "$ref": "#/definitions/constant-element"
        }
      }
    },
    "constant-element": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "string"
        }
      }
    },
    "assignments": {
      "type": "object",
      "patternProperties": {
        ".*": {
          "$ref": "#/definitions/assignment-property"
        }
      }
    },
    "assignment-property": {
      "additionalProperties": false,
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "assignment": {
          "type": "string",
          "enum": [
            "assignee",
            "candidates"
          ],
          "additionalProperties": false
        },
        "type": {
          "type": "string",
          "enum": [
            "static",
            "identity",
            "expression"
          ],
          "additionalProperties": false
        },
        "mode": {
          "type": "string",
          "enum": [
            "manual",
            "sequential"
          ],
          "additionalProperties": false,
          "default": "manual"
        }
      }
    }
  },
  "patternProperties": {
    "extensions": {
      "$ref": "#/definitions/extensions"
    },
    "name": {
      "type": "string"
    },
    "type": {
      "type": "string"
    },
    "id": {
      "type": "string"
    }
  },
  "required": [
    "id"
  ],
  "additionalProperties": false
}
